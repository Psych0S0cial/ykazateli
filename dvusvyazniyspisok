#include "pch.h"
#include <iostream>




class list_elem

{

public:

	int data;

	list_elem * pNext;

	list_elem *pPrev;

	list_elem(int data, list_elem * pNext = nullptr, list_elem *pPrev = nullptr)

	{

		this->data = data;

		this->pNext = pNext;

		this->pPrev = pPrev;

	}

	~list_elem()

	{



	}

};



class list

{

public:

	int size;

	list_elem * head;

	list_elem * last;

	list();

	~list();
	void push_front(int data);


	void vivod_all_spisok();



};








void list::vivod_all_spisok()

{

	

	while (head != nullptr)

	{

		std::cout << head->data << std::endl;

		head = head->pNext;

	}

}



list::list()

{

	head = nullptr;

	last = nullptr;

	size = 0;



}



list::~list()

{

}

void list::push_front(int data)
{
	if (size == 0)
	{
		head = new list_elem(data);
		last = head;
		size++;

	}
	else
	{
		list_elem* temp = new list_elem(data,head);
		head->pPrev = temp;
		head = temp;
		size++;

	}
}






int main()

{

	list x;

	x.push_front(1);
	x.push_front(2);
	x.push_front(3);

	x.vivod_all_spisok();



}
